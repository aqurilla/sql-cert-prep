-- DML STATEMENTS
DESC DEPARTMENTS;

SELECT * FROM DEPARTMENTS;

-- RECOMMENDED SYNTAX
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES                  (71, 'Development 1', 100, 1700);
COMMIT;

-- EXPLICIT METHOD TO INSERT NULL VALUES
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES                  (75, 'Development 5', NULL, NULL);
COMMIT;

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID)
VALUES                (1, 'N', 'Suresh', 'nsu@gmail.com', SYSDATE, 'IT_PROG');
COMMIT;

-- INSERT WITH SUBQUERY
CREATE TABLE XX_EMP
(EMPNO NUMBER,
 FNAME VARCHAR2(100),
 SALARY NUMBER
);

SELECT * FROM XX_EMP;

INSERT INTO XX_EMP (EMPNO, FNAME, SALARY)
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES;

SELECT * FROM XX_EMP;


-- COMMON ERROR EXAMPLES
-- INSERTING EXISTING VALUE FOR PRIMARY KEY
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES                  (10, 'Development 1', 100, 1700);

-- INSERTING FK VALUE WHICH DOES NOT EXIST IN REFERENCE TABLE
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES                  (73, 'Development 1', 100, 1);

-- INSERTING MISMATCHING DATATYPE

-- INSERTING VALUES EXCEEDING LENGTH
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES                  (73, 'Development AND STUDIES RESEARCH DEPARTMENT', 100, 1700);


-- UPDATE STATEMENT
-- SYNTAX
UPDATE XX_EMP
SET SALARY=24100
WHERE EMPNO=100;
COMMIT;

CREATE TABLE COPY_EMP
AS
SELECT * FROM EMPLOYEES;

SELECT *
FROM COPY_EMP;

UPDATE COPY_EMP
SET SALARY=24100, DEPARTMENT_ID=10
WHERE EMPLOYEE_ID=100;
COMMIT;

-- USING SUBQ IN UPDATE
UPDATE COPY_EMP
SET SALARY = (SELECT SALARY FROM COPY_EMP WHERE EMPLOYEE_ID=200)
WHERE EMPLOYEE_ID=100;
COMMIT;

UPDATE COPY_EMP
SET (SALARY, DEPARTMENT_ID) = (SELECT SALARY, DEPARTMENT_ID FROM COPY_EMP WHERE EMPLOYEE_ID=108)
WHERE EMPLOYEE_ID=105;

SELECT *
FROM COPY_EMP
WHERE EMPLOYEE_ID IN (105, 108);


