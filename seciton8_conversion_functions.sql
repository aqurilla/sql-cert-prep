-- IMPLICIT CONVERSION
SELECT * FROM EMPLOYEES
WHERE EMPLOYEE_ID='100'
OR HIRE_DATE='21-SEP-05';

SELECT CONCAT(EMPLOYEE_ID, FIRST_NAME)
FROM EMPLOYEES;

-- DATE FORMATTING
SELECT SYSDATE FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'DD-MM-YYYY')
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'DD-MM-YYYY HH:MI:SS AM')
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'DD-MM-YYYY HH24:MI:SS AM')
FROM DUAL;

SELECT TO_CHAR(HIRE_DATE, 'DD MONTH YYYY'), TO_CHAR(HIRE_DATE, 'FMDD MONTH YYYY')
FROM EMPLOYEES;

SELECT TO_CHAR(HIRE_DATE, 'FMDD "OF" MONTH YYYY')
FROM EMPLOYEES;

SELECT TO_CHAR(HIRE_DATE, 'FMDDSPTH "OF" MONTH YYYY')
FROM EMPLOYEES;

-- CONDITIONAL SEARCH
SELECT *
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE, 'FMMM')='2';

SELECT TO_CHAR(1598,'FM999,999,999') FROM DUAL;

SELECT TO_CHAR(7,'FM9') FROM DUAL;

SELECT LENGTH('-7') FROM DUAL;

-- TO_NUMBER
SELECT TO_DATE('10-11-2015','DD-MM-YYYY') FROM DUAL;

SELECT TO_DATE('10.NOVEMBER.2015','DD.MONTH.YYYY') FROM DUAL;

SELECT * FROM EMPLOYEES
WHERE HIRE_DATE > TO_DATE('10-11-2003', 'DD-MM-YYYY');

SELECT TO_CHAR(TO_DATE('10-11-85','DD-MM-YY'),'YYYY') FROM DUAL;

-- NVL
-- DATATYPES FOR THE TWO EXPRESSIONS INSIDE NVL SHOULD BE SAME
SELECT EMPLOYEE_ID, FIRST_NAME, COMMISSION_PCT, NVL(COMMISSION_PCT, 0)
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, COMMISSION_PCT, NVL(TO_CHAR(COMMISSION_PCT), 'NO COMM.')
FROM EMPLOYEES;

--NVL2
SELECT EMPLOYEE_ID, FIRST_NAME, COMMISSION_PCT, NVL2(COMMISSION_PCT, 'SAL AND COMM.', 'ONLY SALARY')
FROM EMPLOYEES;

-- NULLIF - RETURNS NULL IF ARGS EQUAL, ELSE RETURNS FIRST ARGUMENT
SELECT FIRST_NAME, LENGTH(FIRST_NAME), LAST_NAME, LENGTH(LAST_NAME),
NULLIF(LENGTH(FIRST_NAME), LENGTH(LAST_NAME))
FROM EMPLOYEES;

-- COALESCE RETURNS FIRST NON-NULL VALUE
SELECT EMPLOYEE_ID,
COALESCE(COMMISSION_PCT, MANAGER_ID, SALARY),
NVL(NVL(COMMISSION_PCT, MANAGER_ID), SALARY)
FROM EMPLOYEES;

-- CASE FUNCTION
SELECT FIRST_NAME, JOB_ID, SALARY,
       CASE JOB_ID WHEN 'IT_PROG' THEN 1.10*SALARY
                   WHEN 'ST_CLERK' THEN 1.15*SALARY
                   WHEN 'SA_REP' THEN 1.20*SALARY
       ELSE SALARY
       END "REVISED SALARY"
FROM EMPLOYEES;

-- DECODE FUNCTION
SELECT LAST_NAME, JOB_ID, SALARY,
       DECODE(JOB_ID, 'IT_PROG', 1.10*SALARY,
               'ST_CLERK', 1.15*SALARY,
               'SA_REP', 1.20*SALARY,
               SALARY)
       REVISED_SALARY
FROM EMPLOYEES;