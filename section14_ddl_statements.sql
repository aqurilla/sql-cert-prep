-- DATA DEFINITION LANGUAGE STATEMENTS

CREATE TABLE EMP2
(EMPNO NUMBER);

--TABLE NAME CAN BE UPTO 128 CHARS FOR ORACLE 12.2

-- TABLE NAME CANNOT BE RESERVED WORD
CREATE TABLE SELECT
(EMPNO NUMBER);

-- DATA TYPES
CREATE TABLE TEST
( N1 NUMBER,
  N2 NUMBER(5,3));
  
INSERT INTO TEST (N1, N2)
VALUES           (20.25, 23.35534); -- HERE ORACLE ROUNDS THE DECIMAL TO 3 PLACES

INSERT INTO TEST
VALUES (100, 213.455); -- ERROR THROWN DUE TO NUMBER EXCEEDING PRECISION

-- CLOB RECOMMENDED INSTEAD OF LONG

-- CREATE TABLE
CREATE TABLE XX_EMP_TEST
( EMP_ID NUMBER,
  ENAME VARCHAR2(100),
  SALARY NUMBER(8,2),
  EMP_PIC BLOB
);

-- USING "" WILL MAKE IT CASE-SENSITIVE
-- AND HAS TO BE RETRIEVED USING DUOBLE QUOTES

-- USING DEFAULT
CREATE TABLE XX_EMP_TEST1
( EMP_ID NUMBER,
  ENAME VARCHAR2(100),
  START_DATE DATE DEFAULT SYSDATE
);

INSERT INTO XX_EMP_TEST1 (EMP_ID, ENAME)
VALUES (1, 'Nisu');

COMMIT;

SELECT * FROM XX_EMP_TEST1;

-- USING DICTIONARY TABLES
SELECT TABLE_NAME FROM USER_TABLES;

SELECT TABLE_NAME FROM ALL_TABLES
WHERE OWNER='HR';

-- CONSTRAINTS FOR CREATING TABLES
-- COLUMN LEVEL (TABLE LEVEL IS RECOMMENDED)
CREATE TABLE XX_EMP_COL_CONST
( EMP_ID NUMBER CONSTRAINT XX_EMP_COL_CONST_PK PRIMARY KEY,
  ENAME VARCHAR2(100) CONSTRAINT XX_EMP_COL_CONST_UK1 UNIQUE,
  SALARY NUMBER NOT NULL,
  GENDER CHAR(1) CONSTRAINT XX_EMP_COL_CONST_CHQ CHECK(GENDER IN ('M', 'F')),
  -- FOREIGN KEY SHOULD MATCH PRIMARY OR UNIQUE KEY IN ANOTHER TABLE
  DEPT_ID NUMBER CONSTRAINT XX_EMP_COL_CONST_FK1 REFERENCES DEPARTMENTS (DEPARTMENT_ID)
);

-- VIEWING CONSTRAINTS
SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'XX_EMP_COL_CONST';

-- TABLE-LEVEL CONSTRAINTS
-- CAN MAKE PK HAVING MORE THAN ONE COLUMN
-- ALL CONSTRAINTS HAVE TO BE NAMED
CREATE TABLE XX_EMP_COL_CONST1
( EMP_ID1 NUMBER,
  EMP_ID2 NUMBER,
  ENAME VARCHAR2(100),
  SALARY NUMBER NOT NULL, -- CANNOT BE MADE AT TABLE LEVEL
  GENDER CHAR(1),
  DEPT_ID NUMBER,
  CONSTRAINT XX_EMP_COL_CONST1_PK PRIMARY KEY (EMP_ID1, EMP_ID2),
  CONSTRAINT XX_EMP_COL_CONST1_UK1 UNIQUE (ENAME),
  CONSTRAINT XX_EMP_COL_CONST1_CHQ CHECK (GENDER IN ('M', 'F')),
  CONSTRAINT XX_EMP_COL_CONST1_FK1 FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPARTMENT_ID)
);
-- ONLY 1 PRIMARY KEY CAN BE IN A TABLE
-- NO SUCH LIMITATION FOR UNIQUE
-- ORACLE CREATES INDEXES AUTOMATICALLY ON PRIMARY AND UNIQUE KEYS
-- FOREIGN KEY VALUE MUST MATCH EXISTING VALUE IN PARENT TABLE OR BE NULL

-- ON DELETE CASCADE/ ON DELETE SET NULL
DELETE FROM DEPARTMENTS; -- CANNOT DELETE DUE TO CHILD CONSTRAINTS

CREATE TABLE DEPT1
( DEPTNO NUMBER,
  DNAME VARCHAR2(100),
  CONSTRAINT DEPT1_PK PRIMARY KEY (DEPTNO)
);

INSERT INTO DEPT1 (DEPTNO, DNAME)
VALUES            (1, 'HR_DEPT');
INSERT INTO DEPT1 (DEPTNO, DNAME)
VALUES            (2, 'PO_DEPT');
COMMIT;

SELECT * FROM DEPT1;

CREATE TABLE EMP1
( EMPID NUMBER PRIMARY KEY,
  ENAME VARCHAR2(100),
  DEPT_NO NUMBER,
  CONSTRAINT EMP1_FK FOREIGN KEY (DEPT_NO) REFERENCES DEPT1 (DEPTNO) ON DELETE CASCADE
);

INSERT INTO EMP1 VALUES (1, 'SAM', '1'); -- CHAR DEPTNO HERE WAS COERCED TO NUMBER
INSERT INTO EMP1 VALUES (2, 'TIM', '1');
INSERT INTO EMP1 VALUES (3, 'TOM', '1');
INSERT INTO EMP1 VALUES (4, 'RAM', '2');
INSERT INTO EMP1 VALUES (5, 'JIM', '2');
COMMIT;

SELECT * FROM EMP1;

DELETE FROM DEPT1
WHERE DEPTNO=2;

-- ON DELETING MASTER RECORD, ALL DEPENDENT RECORDS ARE ALSO DELETED
SELECT * FROM EMP1;

-- ON DELETE SET NULL
CREATE TABLE DEPT2
( DEPTNO NUMBER,
  DNAME VARCHAR2(100),
  CONSTRAINT DEPT2_PK PRIMARY KEY (DEPTNO)
);

INSERT INTO DEPT2 (DEPTNO, DNAME)
VALUES            (1, 'HR_DEPT');
INSERT INTO DEPT2 (DEPTNO, DNAME)
VALUES            (2, 'PO_DEPT');
COMMIT;

CREATE TABLE EMP3
( EMPID NUMBER,
  ENAME VARCHAR2(100),
  DEPTNO NUMBER,
  CONSTRAINT EMP3_PK PRIMARY KEY (EMPID),
  CONSTRAINT EMP3_FK FOREIGN KEY (DEPTNO) REFERENCES DEPT2 (DEPTNO) ON DELETE SET NULL
);

INSERT INTO EMP3 VALUES (1, 'SAM', 1); 
INSERT INTO EMP3 VALUES (2, 'TIM', 1);
INSERT INTO EMP3 VALUES (3, 'TOM', 1);
INSERT INTO EMP3 VALUES (4, 'RAM', 2);
INSERT INTO EMP3 VALUES (5, 'JIM', 2);
COMMIT;

SELECT * FROM EMP3;

DELETE FROM DEPT2
WHERE DEPTNO=2;

SELECT * FROM EMP3; -- NOW DEPTNO HAS BEEN SET TO NULL, INSTEAD OF WHOLE RECORD
-- BEING DELETED

-- CREATE TABLE USING SUBQUERY
-- ONLY NOT-NULL CONSTRAINT IS COPIED
-- PK, FK ETC IS NOT COPIED
CREATE TABLE EMP_D90
AS 
  SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_ID
  FROM EMPLOYEES
  WHERE DEPARTMENT_ID=90;

-- COLUMN NAMES APPEAR EXACTLY LIKE THE SELECT STATEMENT ABOVE
  
SELECT * FROM EMP_D90;

-- THE NOT NULL CONSTRAINT OF THE PRIMARY KEY OF PARENT TABLE
-- IS ALSO NOT COPIED
DESC EMP_D90;

-- TO GIVE DIFFERENT NAMES, SPECIFY IT NEXT TO NEW TABLE NAME
-- CAN ALSO SPECIFY DEFAULT VALUES HERE
CREATE TABLE NAMED_EMP_D90 (EMPID, FNAME, LNAME, SAL DEFAULT 0, DEPTID)
AS
  SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_ID
  FROM EMPLOYEES
  WHERE DEPARTMENT_ID=90;
  
SELECT * FROM NAMED_EMP_D90;

-- ALTER TABLE
-- ADD/MODIFY/DROP

-- USING TABLE EMP_D90
SELECT * FROM EMP_D90;

ALTER TABLE EMP_D90
ADD (GENDER CHAR(1));

-- DEFAULT NULL VALUES ADDED
SELECT * FROM EMP_D90;

ALTER TABLE EMP_D90
ADD (COMMISSION NUMBER DEFAULT 0 NOT NULL);

SELECT * FROM EMP_D90;

ALTER TABLE EMP_D90
ADD (COMMISSION2 NUMBER NOT NULL);
-- DOESNT WORK SINCE ONLY DOES IF TABLE EMPTY OR USING DEFAULT VALUE

SELECT * FROM EMP_D90;

-- ADD MULTIPLE COLUMNS
ALTER TABLE EMP_D90
ADD (CREATED_DATE DATE DEFAULT SYSDATE, CREATED_BY VARCHAR2(100) DEFAULT USER);
-- HERE USER IS A FUNCTION THAT RETURNS THE CURRENT USER

SELECT * FROM EMP_D90;

-- MODIFY TABLE
-- CAN CHANGE COLUMN DATATYPE, SIZE AND DEFAULT
-- CHANGE TO DEFAULT ONLY AFFECTS SUBSEQUENT INSERTIONS TO THE TABLE
ALTER TABLE EMP_D90
MODIFY (CREATED_BY VARCHAR(200));

DESC EMP_D90;

ALTER TABLE EMP_D90
MODIFY (CREATED_BY VARCHAR(50));
-- WE CANNOT DECREASE CHAR LENGTH BELOW THE MAXIMUM LENGTH OF ALREADY PRESENT DATA

-- MODIFY (CREATED_BY VARCHAR(1)) WOULD GIVE ERROR

ALTER TABLE EMP_D90
MODIFY (CREATED_BY NOT NULL);
-- WORKS SINCE IT DOES NOT HAVE NULL VALUES

UPDATE EMP_D90
SET GENDER='M';

-- CANNOT CHANGE GENDER TO NUMBER

ALTER TABLE EMP_D90
MODIFY (GENDER CHAR(10));

ALTER TABLE EMP_D90
MODIFY (GENDER VARCHAR2(9));
-- ERROR - cannot decrease column length because some value is too big

-- THIS WORKS
ALTER TABLE EMP_D90
MODIFY (GENDER VARCHAR2(10));

-- IF THE VALUE IS EMPTY (NULL), WE CAN CHANGE IT TO WHATEVER FORMAT.


-- DROP COLUMNS
SELECT * FROM EMP_D90;

-- OLD SYNTAX, CAN ONLY DROP 1 COLUMN AT A TIME
ALTER TABLE EMP_D90
DROP COLUMN CREATED_BY;

-- FOR MULTIPLE COLUMNS
ALTER TABLE EMP_D90
DROP (GENDER, CREATED_DATE);

-- SET UNUSED
ALTER TABLE EMP_D90
SET UNUSED (COMMISSION);
-- SET UNUSED (COMMISSION) ONLINE; <- THIS ALLOWS DML OPERATIONS WHILE COLUMN IS UNUSED
-- NOW THIS UNUSED COLUMN DOES NOT SHOW UP IN DESC, OR SELECT STATEMENTS
-- ALSO ANOTHER COLUMN OF SAME NAME CAN BE ADDED

-- WHAT DOES ONLINE ADD TO ALTER FUNCTIONALITY?

SELECT * FROM EMP_D90;

SELECT * FROM USER_UNUSED_COL_TABS;

UPDATE EMP_D90
SET SAL=100; -- ERROR

ALTER TABLE EMP_D90
DROP UNUSED COLUMNS; -- PHYSICALLY DROPS UNUSED COLUMNS

-- READ ONLY (FOR MAINTENANCE MODE)
ALTER TABLE EMP_D90 READ ONLY;

DELETE FROM EMP_D90; -- DOESNT WORK

-- DDL STATEMENTS THAT DO NOT CHANGE DATA CAN WORK
ALTER TABLE EMP_D90
ADD (CREATED_BY VARCHAR(100));

ALTER TABLE EMP_D90
DROP (CREATED_BY); -- DOES NOT WORK. SO ADDING COLUMN WORKS, BUT DELETING DOESNT

ALTER TABLE EMP_D90 READ WRITE;

-- DROP TABLE
-- ANY VIEWS OR SYNONYMS REMAIN, BUT ARE INVALID
SELECT * FROM EMP_D90;

DROP TABLE EMP_D90;

SELECT * FROM EMP_D90; -- ERROR DOESNT EXIST

-- TO QUERY INSIDE RECYCLEBIN
SELECT * FROM USER_RECYCLEBIN
WHERE ORIGINAL_NAME='EMP_D90';

CREATE TABLE X_JOBS
AS SELECT * FROM JOBS;

SELECT * FROM X_JOBS;

-- PURGE IS LIKE SHIFT-DEL, DELETES PERMANENTLY 
DROP TABLE X_JOBS PURGE;

SELECT * FROM USER_RECYCLEBIN
WHERE ORIGINAL_NAME='X_JOBS'; -- NOT FOUND HERE

-- RENAME COLUMN/TABLE
CREATE TABLE COPY_DEPARTMENTS
( DEPTNO NUMBER,
  DNAME VARCHAR2(100)
);

SELECT * FROM COPY_DEPARTMENTS;

ALTER TABLE COPY_DEPARTMENTS
RENAME COLUMN DNAME TO DEPTNAME;

SELECT * FROM COPY_DEPARTMENTS;

RENAME COPY_DEPARTMENTS TO COPY_DEPT;

SELECT * FROM COPY_DEPT;

SELECT * FROM COPY_DEPARTMENTS; -- ERROR, DOESNT EXIST
-- RENAMING OBJECT IS NOT RECOMMENDED AT ALL - SINCE A LOT OF DEPENDENT VIEWS ETC
-- CAN EXIST.

---------------------------------------------------
---------------------------------------------------
-- PRACTICE
/*
NUMBER(5,3) MEANS THAT THE TOTAL NUMBER OF DIGITS IS 5, AND THE NUMBER
OF DECIMALS IS 3

IF NUMBER OF DECIMAL DIGITS IS GREATER THAN SPECIFIED IN THE SCALE, IT GETS ROUNDED
*/

DROP TABLE XX_EMP_TEST;

CREATE TABLE XX_EMP_TEST
(
  EMP_ID NUMBER,
  ENAME VARCHAR2(100),
  SALARY NUMBER(8,2),
  START_DATE DATE,
  COMMISSION NUMBER (2,2),
  EMP_PIC BLOB,
  EMP_NOTES LONG
);

SELECT * FROM XX_EMP_TEST;

-- "" ARE USED FOR IDENTIFIERS. IF A TABLE IS CREATED USING "", THEN THEY HAVE
-- TO BE USED FOR QUERYING IT AS WELL

SELECT TABLE_NAME FROM USER_TABLES;

SELECT OWNER, TABLE_NAME
FROM ALL_TABLES
WHERE OWNER='HR';

---------------------------------------------------
-- CONSTRAINTS PREVENT INVALID DATA ENTRY

DROP TABLE XX_EMP_COL_CONST;

CREATE TABLE XX_EMP_COL_CONST
(
  EMP_ID NUMBER CONSTRAINT XX_EMP_COL_CONST_PK PRIMARY KEY,
  ENAME VARCHAR2(100) CONSTRAINT XX_EMP_COL_CONST_UK1 UNIQUE,
  SALARY NUMBER NOT NULL,
  GENDER CHAR(1) CONSTRAINT XX_EMP_COL_CONST_CHQ CHECK (GENDER IN ('M', 'F')),
  DEPT_ID NUMBER CONSTRAINT XX_EMP_COL_CONST_FK1 REFERENCES DEPARTMENTS (DEPARTMENT_ID)
);

SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'XX_EMP_COL_CONST';

-- NOT NULL CONSTRAINT IS LISTED AS A CHECK CONSTRAINT
-- IN THE ABOVE TABLE, NULL VALUE CAN BE INSERTED INTO THE GENDER COLUMN
-- EVEN IF THE CHECK M, F EXISTS

-- TABLE LEVEL CONSTRAINTS ARE MORE FLEXIBLE
-- COMPOSITE PRIMARY KEY CAN BE MADE
-- CONSTRAINT NAMES ARE MANDATORY

DROP TABLE XX_EMP_COL_CONST1;

CREATE TABLE XX_EMP_COL_CONST1
(
  EMP_ID1 NUMBER,
  EMP_ID2 NUMBER,
  ENAME VARCHAR2(100),
  SALARY NUMBER NOT NULL, -- CANNOT BE MADE TABLE-LEVEL
  GENDER CHAR(1),
  DEPT_ID NUMBER,
  CONSTRAINT XX_EMP_COL_CONST1_PK PRIMARY KEY (EMP_ID1, EMP_ID2),
  CONSTRAINT XX_EMP_COL_CONST1_UK1 UNIQUE (ENAME),
  CONSTRAINT XX_EMP_COL_CONST1_CHQ CHECK (GENDER IN ('M', 'F')),
  CONSTRAINT XX_EMP_COL_CONST1_FK1 FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENTS (DEPARTMENT_ID)
);

-- CAN ONLY HAVE 1 PRIMARY KEY IN A TABLE

-- PRIMARY KEY GETS NOT NULL CONSTRAINT BY DEFAULT
-- WHEN PRIMARY OR UNIQUE KEY IS CREATED, ORACLE CREATES A UNIQUE INDEX
-- FK MUST MATCH AN EXISTING PARENT VALUE OR BE NULL

-- ON DELETE CASCADE
-- IT IS SPECIFIED IN THE CHILD TABLE
-- CONSTRAINT [NAME] FOREIGN KEY (COL) REFERENCES PTABLE (PCOL) ON DELETE CASCADE

-- ANOTHER OPTION - ON DELETE SET NULL
-- ONLY THE COLUMN THAT IS DELETED IS SET TO NULL

---------------------------------------------------
-- CREATING TABLES WITH SUBQUERIES

DROP TABLE E_EMP;

CREATE TABLE E_EMP
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90;

DESC E_EMP;

SELECT * FROM E_EMP;

-- TO USE NEW COLUMN NAMES
DROP TABLE E_EMP2;

CREATE TABLE E_EMP2 (EMP_ID, FNAME, SAL DEFAULT 0, DEPT_ID)
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90;

DESC E_EMP2;

SELECT *
FROM E_EMP2;

---------------------------------------------------
--ALTER TABLE
SELECT * FROM E_EMP;

-- ADD COLUMN
ALTER TABLE E_EMP
ADD (GENDER CHAR(1));

ALTER TABLE E_EMP
ADD (COMMISSION NUMBER DEFAULT 0 NOT NULL);

ALTER TABLE E_EMP
ADD (COMMISSION2 NUMBER NOT NULL);
-- ERROR, BECAUSE table must be empty to add mandatory (NOT NULL) column,
-- OR SHOULD HAVE DEFAULT SPECIFIED

-- ADDING MULTIPLE COLUMNS
ALTER TABLE E_EMP
ADD (CREATED_DATE DATE DEFAULT SYSDATE, CREATED_BY VARCHAR2(100) DEFAULT USER);

SELECT * FROM E_EMP;

---------------------------------------------------
-- MODIFYING COLUMNS

DESC E_EMP;

ALTER TABLE E_EMP
MODIFY (CREATED_BY VARCHAR2(200));
-- REDUCING THE SIZE OF VARCHAR CAN BE DONE IF THE FINAL SIZE IS
-- NOT LESS THAN MAXIMUM EXISTING DATA SIZE

ALTER TABLE E_EMP
MODIFY (CREATED_BY NOT NULL);

-- TO CHANGE DATATYPE, COLUMN SHOULD BE EMPTY

-- FOR CHAR TO VARCHAR2 CONVERSION, IT HAS TO BE SAME SIZE

---------------------------------------------------
-- DROP COLUMNS
SELECT * FROM E_EMP;

-- IF USING 'DROP COLUMN' CLAUSE, ONLY 1 COLUMN CAN BE DROPPED
-- USING 'DROP' CLAUSE, MULTIPLE COLUMNS CAN BE DROPPED

ALTER TABLE E_EMP DROP (GENDER, CREATED_BY);

-- SET UNUSED
ALTER TABLE E_EMP
SET UNUSED (SALARY);

SELECT * FROM USER_UNUSED_COL_TABS;

-- TO REMOVE THE COLUMN PHYSICALLY
ALTER TABLE E_EMP
DROP UNUSED COLUMNS;

-- READ ONLY/ READ WRITE
SELECT * FROM E_EMP2;

ALTER TABLE E_EMP2
READ ONLY;

ALTER TABLE E_EMP2
ADD (CREATED_BY VARCHAR2(100));
-- THIS IS ALLOWED BECAUSE NO DATA IS CHANGED

SELECT * FROM E_EMP2;

ALTER TABLE E_EMP2
DROP (CREATED_BY);
-- ERRORS OUT BECAUSE IT CHANGES DATA

ALTER TABLE E_EMP2
READ WRITE;

SELECT * FROM E_EMP2;

DROP TABLE E_EMP2;

SELECT * FROM USER_RECYCLEBIN
WHERE ORIGINAL_NAME='E_EMP2';

DROP TABLE X_TEST PURGE;
-- PURGE CLAUSE REMOVES THE TABLE COMPLETELY. IT WILL NOT BE PRESENT IN THE 
-- RECYCLEBIN

---------------------------------------------------
-- RENAME COLUMN/TABLE

SELECT *
FROM DEPT_COPY;

ALTER TABLE DEPT_COPY
RENAME COLUMN DEPARTMENT_NAME TO DEPT_NAME;

-- RENAME TABLE
-- RENAMING OBJECTS ARE NOT RECOMMENDED, DUE TO EXISTING DEPENDENCIES
RENAME DEPT_COPY TO DEPT_COPY2;

SELECT *
FROM DEPT_COPY2;

