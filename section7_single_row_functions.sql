-- CASE CONVERSION FUNCTIONS
SELECT EMPLOYEE_ID, FIRST_NAME, UPPER(FIRST_NAME), 
LOWER(FIRST_NAME), INITCAP(FIRST_NAME)
FROM EMPLOYEES;

SELECT *
FROM EMPLOYEES
WHERE UPPER(FIRST_NAME)='PATRICK';

-- CHARACTER MANIPULATION
-- CONCAT FUNCTION ONLY TAKES 2 ARGUMENTS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, CONCAT(FIRST_NAME, LAST_NAME)
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, FIRST_NAME || ' ' || LAST_NAME NAME
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, SUBSTR(FIRST_NAME, 1, 3), SUBSTR(FIRST_NAME, -3)
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME,
INSTR(FIRST_NAME, 'nn'),
INSTR(FIRST_NAME, 'e', 2),
INSTR(FIRST_NAME, 'e', 5),
INSTR(FIRST_NAME, 'e', 1, 2)
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%nn%';

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, LPAD(SALARY, 10, '#'),
RPAD(SALARY, 10, '#')
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, REPLACE(FIRST_NAME, 'a', '*')
FROM EMPLOYEES;

SELECT * FROM DUAL;

-- CHARACTERS ARE ONLY REMOVED FROM THE BEGINNING AND THE END
SELECT TRIM (LEADING ' ' FROM '     GAMING LAPTOP      ') 
FROM DUAL;

SELECT TRIM (TRAILING ' ' FROM '      GAMING LAPTOP     ') 
FROM DUAL;

SELECT TRIM (BOTH ' ' FROM '      GAMING LAPTOP     ') 
FROM DUAL;

SELECT TRIM ('      GAMING      LAPTOP     ') 
FROM DUAL;


-- NUMERIC FUNCTIONS
SELECT ROUND(10.5) FROM DUAL;

SELECT ROUND(114.49) FROM DUAL;

SELECT ROUND(10.99, 1) FROM DUAL;

SELECT ROUND(-715.493, -3) FROM DUAL;

SELECT ROUND(-1715.493, -3) FROM DUAL;

-- TRUNC FUNCTION (REMOVES DECIMALS, SETS OTHERS TO 0)
SELECT TRUNC(10.6565) FROM DUAL;

SELECT TRUNC(910.6565, -2) FROM DUAL;

-- MOD - MODULUS
SELECT MOD(15, 2) FROM DUAL;
SELECT MOD(101, 2) FROM DUAL;

-- DATE FUNCTIONS
-- DD-MON-RR FORMAT
SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES;

-- ADDING DAYS
SELECT SYSDATE, SYSDATE + 3 
FROM DUAL; 

SELECT HIRE_DATE, SYSDATE, ROUND((SYSDATE-HIRE_DATE)/7) NUMBER_WEEKS
FROM EMPLOYEES;

-- ADDING NUMBER OF HOURS
SELECT SYSDATE + 5/24
FROM DUAL;

-- USUALLY LARGER DATE FIRST
SELECT FIRST_NAME, MONTHS_BETWEEN(SYSDATE, HIRE_DATE)
FROM EMPLOYEES;

SELECT FIRST_NAME, HIRE_DATE, ADD_MONTHS(HIRE_DATE, 1)
FROM EMPLOYEES;

-- NEGATIVE VALUE GOES BACKWARDS
SELECT FIRST_NAME, HIRE_DATE, ADD_MONTHS(HIRE_DATE, -1)
FROM EMPLOYEES;

-- 1 ='Sunday' ACC TO NLS_DATE_LANGUAGE
SELECT SYSDATE,  NEXT_DAY(SYSDATE, 1)
FROM DUAL;

-- RETURNS LAST DAY OF MONTH
SELECT LAST_DAY(SYSDATE) FROM DUAL;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME,
HIRE_DATE, ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)),
ADD_MONTHS(HIRE_DATE, 6), NEXT_DAY(HIRE_DATE, 'FRIDAY')
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME,
HIRE_DATE, ROUND(HIRE_DATE, 'YEAR'), TRUNC(HIRE_DATE, 'YEAR')
FROM EMPLOYEES
ORDER BY HIRE_DATE;

-- NESTING FUNCTIONS
SELECT FIRST_NAME, SUBSTR(UPPER(FIRST_NAME), 1, 3)
FROM EMPLOYEES;

-- EXTRACTING PARTS OF SENTENCE
SELECT 'EXTRACT THIS SENTENCE' FULLN,
SUBSTR('EXTRACT THIS SENTENCE', 1, INSTR('EXTRACT THIS SENTENCE', ' ',1,1)-1),
SUBSTR('EXTRACT THIS SENTENCE', INSTR('EXTRACT THIS SENTENCE', ' ',1,1)+1, 
INSTR('EXTRACT THIS SENTENCE', ' ',1,2)-INSTR('EXTRACT THIS SENTENCE', ' ',1,1)+1-1),
SUBSTR('EXTRACT THIS SENTENCE', INSTR('EXTRACT THIS SENTENCE', ' ',1,2)+1)
FROM DUAL;

--------------------------------------------------
-- PRACTICE 

-- SINGLE ROW FUNCTIONS - RETURN 1 RESULT PER ROW
-- MULTIPLE ROW FUNCTIONS - RETURN 1 RESULT PER SET OF ROWS

-- CASE CONVERSION FUNCTION

SELECT FIRST_NAME, UPPER(FIRST_NAME), LOWER(FIRST_NAME), INITCAP(FIRST_NAME)
FROM EMPLOYEES;

SELECT *
FROM EMPLOYEES
WHERE UPPER(FIRST_NAME) = UPPER('patrick');

--CAN USE WITH SELECT, WHERE AND GROUPBY

-- CONCAT FUNCTION ONLY TAKES 2 ARGUMENTS
SELECT FIRST_NAME, LAST_NAME, CONCAT(FIRST_NAME, LAST_NAME)
FROM EMPLOYEES;

-- SUBSTR FUNCTION
-- SUBSTR(COLUMN|EXPR,M,N)
-- M - STARTING CHARACTER, N CHARACTERS LONG
-- NO N VALUE - TILL END OF STRING
-- IF M NEGATIVE, COUNT STARTS FROM END
SELECT FIRST_NAME, SUBSTR(FIRST_NAME, 1, 4), SUBSTR(FIRST_NAME, -3), LENGTH(FIRST_NAME)
FROM EMPLOYEES;

--INSTRING
-- INSTR(COL, EXPR, M, N)
-- M - INDEX TO START SEARCHING
-- N - NTH OCCURENCE
-- DEFAULT M,N=1
SELECT FIRST_NAME,
INSTR(FIRST_NAME, 'e', 1,2)
FROM EMPLOYEES;

-- EMPLOYEES WHO HAVE TWO 'e' IN THEIR FIRST NAME
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE INSTR(FIRST_NAME, 'e', 1,2) != 0;

SELECT FIRST_NAME,
INSTR(FIRST_NAME, 'e'),
INSTR(FIRST_NAME, 'e', 2),
INSTR(FIRST_NAME, 'e', 5),
INSTR(FIRST_NAME, 'e', 1, 2)
FROM EMPLOYEES;

-- STARTS FROM M BUT RETURNS THE ABSOLUTE POSITION OF THE SUBSTRING

















