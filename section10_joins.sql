-- OLD SYNTAX
-- CARTESIAN PRODUCT
SELECT EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME,
DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES, 
DEPARTMENTS
ORDER BY EMPLOYEE_ID;

-- EQUIJOIN / SIMPLE JOIN / INNER JOIN
SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP, 
DEPARTMENTS DEPT
WHERE EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID
AND EMP.DEPARTMENT_ID > 30
ORDER BY EMPLOYEE_ID;

SELECT
EMP.EMPLOYEE_ID, EMP.FIRST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME, 
DEPT.LOCATION_ID, LOC.CITY
FROM EMPLOYEES EMP,
DEPARTMENTS DEPT,
LOCATIONS LOC
WHERE EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID
AND DEPT.LOCATION_ID = LOC.LOCATION_ID
ORDER BY EMPLOYEE_ID;

-- NONEQUIJOIN
SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME, EMP.SALARY, GRADES.GRADE_LEVEL
FROM EMPLOYEES EMP, JOB_GRADES GRADES
WHERE EMP.SALARY >= GRADES.LOWEST_SAL
AND EMP.SALARY <= GRADES.HIGHEST_SAL;

-- OUTER JOIN
SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP, 
DEPARTMENTS DEPT
WHERE EMP.DEPARTMENT_ID(+) = DEPT.DEPARTMENT_ID;

SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP, 
DEPARTMENTS DEPT
WHERE EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID(+);

-- SELF JOIN
SELECT WORKER.EMPLOYEE_ID, WORKER.FIRST_NAME || ' ' || WORKER.LAST_NAME,
WORKER.MANAGER_ID, MANAGER.FIRST_NAME || ' ' || MANAGER.LAST_NAME
FROM EMPLOYEES WORKER, EMPLOYEES MANAGER
WHERE WORKER.MANAGER_ID = MANAGER.EMPLOYEE_ID
ORDER BY WORKER.EMPLOYEE_ID;


SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME, EMP.DEPARTMENT_ID,
DEPT.DEPARTMENT_NAME, DEPT.LOCATION_ID, LOC.CITY, CONT.COUNTRY_NAME
FROM EMPLOYEES EMP,
DEPARTMENTS DEPT,
LOCATIONS LOC,
COUNTRIES CONT
WHERE EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID(+)
AND DEPT.LOCATION_ID = LOC.LOCATION_ID(+)
AND LOC.COUNTRY_ID = CONT.COUNTRY_ID(+)
AND SALARY > 2500;


-- 1999 SYNTAX
-- CROSS JOIN - SAME AS CARTESIAN JOIN
SELECT EMPLOYEE_ID, LAST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES 
CROSS JOIN DEPARTMENTS
ORDER BY EMPLOYEE_ID;

-- NATURAL JOIN - JOINS COLUMNS THAT HAVE SAME NAME AND SAME DATATYPE
-- CANNOT PREFIX TABLE NAME IN MATCH COLUMN
SELECT DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME,
LOCATION_ID, LOC.CITY
FROM DEPARTMENTS DEPT
NATURAL JOIN LOCATIONS LOC
WHERE DEPARTMENT_ID > 20;

-- USING CLAUSE
-- CANNOT PREFIX TABLE NAME IN MATCH COLUMN
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, 
DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP 
JOIN DEPARTMENTS DEPT
USING (DEPARTMENT_ID)
WHERE EMPLOYEE_ID > 100;

-- ON CLAUSE
-- IS THE PREFERRED JOIN
-- PREFIX TABLE HAS TO BE USED
SELECT EMP.EMPLOYEE_ID, EMP.LAST_NAME, 
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP 
JOIN DEPARTMENTS DEPT
ON (EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID);

-- THREE TABLE JOINS
SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME, EMP.LAST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME, LOC.CITY
FROM EMPLOYEES EMP 
JOIN DEPARTMENTS DEPT
ON (EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID)
JOIN LOCATIONS LOC
ON (DEPT.LOCATION_ID = LOC.LOCATION_ID);

-- LEFT/RIGHT/FULL OUTER JOINS
SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME, EMP.LAST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP 
LEFT OUTER JOIN DEPARTMENTS DEPT
ON (EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID);

SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME, EMP.LAST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP 
RIGHT OUTER JOIN DEPARTMENTS DEPT
ON (EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID);

SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME, EMP.LAST_NAME,
DEPT.DEPARTMENT_ID, DEPT.DEPARTMENT_NAME
FROM EMPLOYEES EMP 
FULL OUTER JOIN DEPARTMENTS DEPT
ON (EMP.DEPARTMENT_ID = DEPT.DEPARTMENT_ID);

--------------------------------------------------
--------------------------------------------------
-- PRACTICE

SELECT * FROM EMPLOYEES;

-- OLD SYNTAX
-- CARTESIAN JOIN
-- ALL COMBINATIONS OF ROWS ARE GENERATED
SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E,
DEPARTMENTS D
ORDER BY E.EMPLOYEE_ID;

-- EQUIJOIN / SIMPLE JOIN / INNER JOIN
SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E,
DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY E.EMPLOYEE_ID;

SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E,
DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.DEPARTMENT_ID >= 100
ORDER BY E.EMPLOYEE_ID;

SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_ID, 
D.DEPARTMENT_NAME, L.LOCATION_ID, L.CITY
FROM EMPLOYEES E,
DEPARTMENTS D,
LOCATIONS L
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
ORDER BY E.EMPLOYEE_ID;

--NONEQUIJOIN
-- JOIN CONDITION NOT AN EQUALITY OPERATOR
-- NOT COMMONLY USED AND NOT RECOMMENDED

-- OUTER JOINS
SELECT E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E,
DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+);
--(+) PLACED ON SIDE THAT DOES NOT HAVE MATCHING RECORDS

-- SELF-JOINS
SELECT E.EMPLOYEE_ID, E.MANAGER_ID, M.LAST_NAME
FROM EMPLOYEES E,
EMPLOYEES M
WHERE E.MANAGER_ID = M.EMPLOYEE_ID;

SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_NAME, L.CITY, C.COUNTRY_NAME
FROM EMPLOYEES E,
DEPARTMENTS D,
LOCATIONS L,
COUNTRIES C
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+)
AND  D.LOCATION_ID = L.LOCATION_ID(+)
AND L.COUNTRY_ID = C.COUNTRY_ID(+)
AND SALARY > 2500;

-- 1999 SYNTAX
-- CARTESIAN JOIN
SELECT E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
CROSS JOIN DEPARTMENTS D;

-- NATURAL JOIN
-- JOINING ON COLUMNS HAVING THE SAME NAME
-- NOT RECOMMENDED
SELECT E.LAST_NAME, DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
NATURAL JOIN DEPARTMENTS D;
-- SAME NAMED COLUMNS HAVING DIFFERENT DATATYPES RETURN AN ERROR
-- Columns that are used for a named-join (either a NATURAL join
-- or a join with a USING clause) cannot have an explicit qualifier.

-- USING CLAUSE
SELECT E.LAST_NAME, DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D
USING (DEPARTMENT_ID);

-- ON CLAUSE
SELECT E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);
-- HERE PREFIX IS REQUIRED FOR THE SHARED COLUMN

SELECT E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.CITY
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)
JOIN LOCATIONS L
ON (D.LOCATION_ID = L.LOCATION_ID);

-- LEFT / RIGHT / FULL OUTER JOIN
SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
LEFT OUTER JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);

SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
RIGHT OUTER JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);

SELECT E.EMPLOYEE_ID, E.LAST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
FULL OUTER JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);

